 SELECT convert_timezone('UTC'::text, stores.timezone::text, orders.created_at) AS created_at_local, convert_timezone('UTC'::text, stores.timezone::text, orders.started_at) AS started_at_local, convert_timezone('UTC'::text, stores.timezone::text, orders.served_at) AS served_at_local, convert_timezone('UTC'::text, stores.timezone::text, orders.delivered_at) AS delivered_at_local, orders.id AS order_id, orders.user_id, orders.store_id, orders.fund_id, orders.payment_processor_transaction_id, orders."position", orders.total, orders.total_taxes, orders.status, orders.is_refunded, orders.is_vip, orders.is_on_hold, orders.do_send_receipt_email, orders.do_send_order_ready_sms, orders.human_readable_id, orders.notes, orders.recubby_holding_area, orders.expo_station_id, orders.created_at, orders.updated_at, orders.started_at, orders.served_at, orders.is_ada, orders.is_see_attendant, orders.total_without_adjustments, orders.client_sent_id, orders.is_mobile, orders.timeslot_start_time, orders.scheduled_time, orders.initial_eta, orders.apns_token, orders.queued_at, orders.delivered_at, orders.held_at, orders.last_cubbied_at, orders.gross_total, orders.main_menu_id, orders.daypart, orders.order_channel, orders.scheduled_to_fire_at, orders.gcm_token, stores.id AS "id _stores_", stores.phone_number, stores.address, stores.locality, stores."region", stores.postcode, stores.country, stores.status AS "status _stores_", stores."position" AS "position _stores_", stores.next_human_readable_id, stores.created_at AS "created_at _stores_", stores.updated_at AS "updated_at _stores_", stores.timezone, stores.modifier_stocks_updated_at, stores.item_stocks_updated_at, stores.menus_and_items_updated_at, stores.mobile_orders_disabled, stores.store_number, stores.latitude, stores.longitude, stores.latest_version, stores.effective_date, stores.business_page_url, line_items.id AS "id _line_items_", line_items.item_id, line_items.refund_id, line_items.external_tracking_id, line_items.is_comped, line_items.is_refunded AS "is_refunded _line_items_", line_items.status AS "status _line_items_", line_items.reorder_id, line_items.line_item_total, line_items.line_item_total_taxes, line_items.created_at AS "created_at _line_items_", line_items.updated_at AS "updated_at _line_items_", line_items.gross_total AS "gross_total _line_items_", line_items.completed_at, line_items.started_at AS "started_at _line_items_", items.id AS "id _items_", items.menu_id, items."position" AS "position _items_", items.name, items.description, items.price, items.untaxable, items.base_ingredient_names, items.base_ingredient_description, items.base_ingredient_cloudinary_image_id, items.cloudinary_image_id, items.created_at AS "created_at _items_", items.updated_at AS "updated_at _items_", items.item_type, items.item_subtype, items.is_new, items.icon_cloudinary_image_id, items.is_experimental, t_user_accounts.user_account, t_user_accounts.user_email, t_user_accounts.user_id AS "user_id _t_user_accounts_", t_user_accounts.is_test_user, t_user_accounts.is_employee_user, periods.start_date, periods.end_date, periods.name AS "name _periods_", "order modifications".ordered_truffled_egg, "order modifications".is_reorder
   FROM kwwhub_public.orders orders
   LEFT JOIN kwwhub_public.stores stores ON orders.store_id::text = stores.id::text AND orders.created_at >= stores.effective_date AND orders.created_at <= stores.expiration_date AND stores.version_id::text <> ''::text
   LEFT JOIN kwwhub_public.line_items line_items ON orders.id::text = line_items.order_id::text
   LEFT JOIN kwwhub_public.items items ON line_items.item_id::text = items.id::text AND line_items.created_at >= items.effective_date AND line_items.created_at <= items.expiration_date AND items.version_id::text <> ''::text
   LEFT JOIN customer_identity.t_user_accounts t_user_accounts ON orders.user_id::text = t_user_accounts.user_id::text
   JOIN "csv".periods periods ON orders.created_at >= periods.start_date AND orders.created_at <= periods.end_date
   LEFT JOIN ( SELECT orders.id AS order_id, "max"(
        CASE
            WHEN modifiers.name::text = 'Truffled Egg'::text THEN 1
            ELSE 0
        END) AS ordered_truffled_egg, COALESCE("max"(reorder.is_reorder), 0) AS is_reorder
   FROM kwwhub_public.orders orders
   LEFT JOIN kwwhub_public.line_items line_items ON orders.id::text = line_items.order_id::text
   LEFT JOIN kwwhub_public.modifications modifications ON line_items.id::text = modifications.line_item_id::text
   LEFT JOIN kwwhub_public.modifiers modifiers ON modifications.modifier_id::text = modifiers.id::text AND modifiers.version_id::text <> ''::text AND to_char(convert_timezone('UTC'::text, 'America/Los_Angeles'::text, orders.created_at), 'YYYY-MM-DD HH24:MI:SS'::text) >= to_char(convert_timezone('UTC'::text, 'America/Los_Angeles'::text, modifiers.effective_date), 'YYYY-MM-DD HH24:MI:SS'::text) AND to_char(convert_timezone('UTC'::text, 'America/Los_Angeles'::text, orders.created_at), 'YYYY-MM-DD HH24:MI:SS'::text) < to_char(convert_timezone('UTC'::text, 'America/Los_Angeles'::text, modifiers.expiration_date), 'YYYY-MM-DD HH24:MI:SS'::text)
   LEFT JOIN ( SELECT DISTINCT line_items.reorder_id, 1 AS is_reorder
   FROM kwwhub_public.line_items) reorder ON reorder.reorder_id::text = orders.id::text
  GROUP BY orders.id) "order modifications" ON orders.id::text = "order modifications".order_id::text;